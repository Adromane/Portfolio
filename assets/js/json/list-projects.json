[
    {
        "link": "Ping Pong/index",
        "repository": "https://github.com/NielRodrigues/ping-pong",
        "img": "ping-pong.png",
        "title": "PING PONG",
        "description": "Esse √© um projeto b√°sico desenvolvido pelo canvas no HTML. √â um jogo que manipula a posi√ß√£o de elementos na tela em tempo real.",
        "date": "02-22-2023",
        "tech": ["html5", "css3", "javascript"]
    },
    {
        "link": "https://carlosdanieldev.netlify.app/",
        "repository": "https://github.com/NielRodrigues/portfolio",
        "img": "portifolio.png",
        "title": "Portif√≥lio",
        "description": "Ce portfolio a √©t√© d√©velopp√© par moi en utilisant mes connaissances avanc√©es en HTML5, CSS3 et Javascript. Pour ce portfolio, j'ai d'abord d√©velopp√© le design dans Figma en appliquant mes comp√©tences en tant que UX/UI Design. J'ai √©galement utilis√© le pr√©processeur CSS pour construire ce site, SASS. Certaines biblioth√®ques comme Typed.JS et Owl Carousel ont √©t√© utilis√©es dans ce portfolio pour ce site. J'ai √©galement d√©velopp√© des animations pour le Menu Mobile en utilisant Javascript et CSS, en appliquant √©galement les concepts de r√©activit√©. En Javascript, j'ai √©galement appliqu√© mes connaissances en AJAX pour utiliser une API pour envoyer des donn√©es de formulaire √† mon e-mail.",
        "date": "03-21-2023",
        "tech": ["html5", "css3", "javascript", "sass"]
    },
    {
        "link": "https://cr-reservadehotel-2703.netlify.app/",
        "repository": "https://github.com/NielRodrigues/Reserva-de-Hotel",
        "img": "reserva-de-hotel.png",
        "title": "Reserva de Hotel",
        "description": "C'est un projet que j'ai d√©velopp√© pour appliquer mes connaissances dans le cadre 'Bootstrap'. L'objectif principal du projet √©tait d'utiliser les classes Bootstrap, de travailler avec des balises et des formulaires. Aucune automatisation n'a √©t√© effectu√©e √† l'aide de Javascript pour ce projet. Je viens d'appliquer mes connaissances pour travailler avec UX/UI Design, ainsi que des connaissances avanc√©es en HTML et CSS. Pour ce projet j'ai utilis√©, en plus de HTML5 et CSS3, le pr√©processeur CSS, Sass, ainsi que le framework CSS, Bootstrap. J'ai √©galement utilis√© certaines biblioth√®ques comme Font Awesome et Materialize Icons.",
        "date": "03-27-2023",
        "tech": ["html5", "css3", "bootstrap", "sass"]
    },
    {
        "link": "https://cr-todolist-2903.netlify.app/",
        "repository": "https://github.com/Adromane/todo-list-yt",
        "img": "lista-de-tarefas.png",
        "title": "Lista de Tarefas",
        "description": "Mon premier projet en React JS. Ce projet que j'ai d√©velopp√© pour appliquer mes connaissances en React JS ainsi que mes connaissances en HTML CSS et Javascript. Le projet consiste en une simple liste de t√¢ches o√π l'utilisateur peut ajouter ou supprimer des t√¢ches dans une liste. Dans ce projet, je n'ai pas travaill√© avec le stockage local, donc les informations sont r√©initialis√©es lorsque l'utilisateur recharge la page, car le focus ne fonctionnait pas avec la m√©moire locale, donc le projet consistait simplement √† appliquer les connaissances, les principes fondamentaux et les concepts de React, tels que comme : √âtats, Composants, Props, JSX, etc...",
        "date": "03-29-2023",
        "tech": ["html5", "css3", "javascript", "react"]
    },
    {
        "link": "https://cr-controlefinanceiro-0104.netlify.app/",
        "repository": "https://github.com/NielRodrigues/",
        "img": "controle-financeiro.png",
        "title": "Controle Financeiro",
        "description": "Esse projeto eu contrui um aplica√ß√£o web para controle financeiro, na qual o usu√°rio detalhe seu recebimnetos e gastos. Para esse projeto, eu construi uma aplica√ß√£o usando o React JS. O conceito desse projeto foi o mesmo utilizado no projeto da Lista de Tarefas, por√©m eu ainda utilizei o Local Storage para as informa√ß√µes n√£o se perderem quando recarregar a p√°gina. Todos os fundamentos de React foram utilizado nesse projeto, bem como os conceitos avan√ßados em HTML, CSS e Javascript",
        "date": "04-01-2023",
        "tech": ["html5", "css3", "javascript", "react"]
    },
    {
        "link": "https://cr-api-github-0504.netlify.app/",
        "repository": "https://github.com/Adromane/API-github",
        "img": "api-github.png",
        "title": "API GitHub",
        "description": "Ce projet en ReactJS √©tait un projet pour lequel j'ai utilis√© tous les fondamentaux avanc√©s que j'ai appris de cette Lib, en utilisant des √âtats, des Props, des Composants, etc., en plus de mes connaissances en JavaScript, HTML et CSS. Dans la partie Front End, j'ai d√©velopp√© le style √† l'aide des composants stylis√©s. En ce qui concerne la demande d'API GitHub, j'ai utilis√© Axios pour obtenir des donn√©es de cette API de mani√®re asynchrone et enregistrer toutes ces donn√©es, telles que les informations utilisateur et les r√©f√©rentiels, dans une variable d'√©tat au sein d'un composant fonctionnel..",
        "date": "04-05-2023",
        "tech": ["html5", "css3", "javascript", "react"]
    },
    {
        "link": "https://cr-weatherapp-1004.netlify.app/",
        "repository": "https://github.com/Adromane/APLI-m-t-o-et-m-t-o",
        "img": "weather-app.png",
        "title": "Weather APP",
        "description": "Il s'agit d'une application construite en React qui interroge la m√©t√©o et la m√©t√©o de chaque ville. L'application consomme une API gratuite (Open Weather) dans laquelle l'utilisateur recherche une ville et l'application renvoie des donn√©es et des informations et les affiche √† l'√©cran. Pour cette application, une requ√™te API a √©t√© effectu√©e √† l'aide de 'FETCH'. Des concepts tels que States, Components, Styled Components, JSX, API Request, ont √©t√© utilis√©s dans ce projet.",
        "date": "04-10-2023",
        "tech": ["html5", "css3", "javascript", "react"]
    },
    {
        "link": "https://cr-pedidoonline-1704.netlify.app/",
        "repository": "https://github.com/NielRodrigues/pedido-online",
        "img": "pedido-online.png",
        "title": "Pedido Online",
        "description": "O 'Pedido Online' foi um projeto que desenvolvi para exemplicar um sistema de um restaurante delivery. O projeto foi feito em React com TypeScript aplicando todos os fundamentos de React, como Components, States e Props, al√©m de Styled Components, Requisi√ß√£o de uma API interna utilizando o Axios e cria√ß√£o de Hooks personalizados.",
        "date": "04-17-2023",
        "tech": ["html5", "css3", "typescript", "react"]
    },
    
    {
        "link": "https://blocodenotasonline.netlify.app/",
        "repository": "https://github.com/NielRodrigues/bloco-de-notas-online",
        "img": "bloco-de-notas.png",
        "title": "Bloco de Notas Online",
        "description": "üíª Projeto: <br> Esse √© um projeto fullstack simples feito em ReactJS + NodeJS. Ele serve para registrar novas anota√ß√µes dos usu√°rios (uma esp√©cie de bloco de notas online) que s√£o salvas automaticamente e pode ser acessada de qualquer dispositivo, e para registrar essas anota√ß√µes √© necess√°rio registrar uma conta no site e fazer o login.<br><br>üõ†Ô∏è Tecnologias utilizadas:<br>‚ñ™ ReactJS: utilizei o ReactJS para criar a parte do Frontend, eu escolhi ele por causa da sua cria√ß√£o de intefarce com componentiza√ß√£o.<br>‚ñ™ NodeJS: o NodeJS foi utilizado para criar a API e consumir os dados diretamente do Banco de Dados.<br>‚ñ™ PostgreSQL: o Banco de Dados utilizado nesse projeto foi o PostgreSQL pela sua facilidade de se relacionar/conectar com NodeJS.<br>‚ñ™ ExpressJS: o Express foi o framework utilizado para realizar as requisi√ß√µes HTTP do lado do servidor pela sua facilidade na sua integra√ß√£o e organiza√ß√£o do nosso projeto no padr√£o MVC.<br>‚ñ™ Sequelize: o ORM usado para esse projeto foi o Sequelize para realizar o CRUD e nos conectarmos e operarmos o Banco de Dados.<br>‚ñ™ Axios: o Axios foi a biblioteca utilizada no Frontend para realizar a integra√ß√£o √† API.<br>‚ñ™ Local Storage: utilizei o Local Storage do navegador para armazenar os dados de Login de uma forma mais simples.<br>‚ñ™ Render: para fazer deploy da API e do Banco de Dados.<br><br>‚ñ™ Outros: outras bibliotecas como o Multer (para upload de arquivos) e Bcrypt (para criptografia das senhas) tamb√©m foram utilizadas nesse projeto no Backend.",
        "date": "05-29-2023",
        "tech": ["html5", "css3", "javascript", "react", "node js", "postgresql"]
    }
]
